---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/blogs":
    post:
      summary: Create blog
      tags:
      - Blogs
      parameters: []
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    "$ref": "#/components/schemas/blog_response"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/record_invalid_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                blog:
                  "$ref": "#/components/schemas/blog_request"
    get:
      summary: Get all blogs
      tags:
      - Blogs
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/blog_response"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
  "/api/v1/blogs/{id}":
    get:
      summary: Get blog
      tags:
      - Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    "$ref": "#/components/schemas/blog_response"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/record_not_found_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
    put:
      summary: Update blog
      tags:
      - Blogs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    "$ref": "#/components/schemas/blog_response"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/record_not_found_error"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/record_invalid_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                blog:
                  "$ref": "#/components/schemas/blog_request"
  "/api/v1/users/me":
    get:
      summary: User information
      tags:
      - Users
      security:
      - bearer_auth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                      user_name:
                        type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
  "/api/v1/users/refresh":
    post:
      summary: Refresh Token
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: access_token
                        description: JWT token
                      refresh_token:
                        type: string
                        example: refresh_token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: refresh_token
              required:
              - refresh_token
  "/api/v1/users/revoke":
    post:
      summary: Refresh Token
      tags:
      - Users
      parameters: []
      responses:
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: refresh_token
              required:
              - refresh_token
  "/api/v1/users/sign_in":
    post:
      summary: Sign In
      tags:
      - Users
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: access_token
                        description: JWT token, expires in 4 days
                      refresh_token:
                        type: string
                        example: refresh_token
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unauthorized_error"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/unknown_error"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_name:
                  type: string
                  example: user_name
                password:
                  type: string
                  example: password
              required:
              - user_name
              - password
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer_auth:
      type: apiKey
      name: Authorization
      in: header
  schemas:
    blog_response:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        content:
          type: string
    blog_request:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
      - title
      - content
    unknown_error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error_code:
          type: string
          default: UNKNOWN_ERROR
        error_message:
          type: string
          default: Unknown error
        errors:
          type: array
    record_invalid_error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error_code:
          type: string
          default: RECORD_INVALID_ERROR
        error_message:
          type: string
          default: Record invalid error
        errors:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              model:
                type: string
                example: Blog
              attribute:
                type: string
                example: title
              full_message:
                type: string
                example: Title can't be blank
    record_not_found_error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error_code:
          type: string
          default: RECORD_NOT_FOUND_ERROR
        error_message:
          type: string
          default: Record not found error
        errors:
          type: array
    unauthorized_error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        error_code:
          type: string
          default: UNAUTHORIZED_ERROR
        error_message:
          type: string
          default: Invalid credentials
        errors:
          type: array
